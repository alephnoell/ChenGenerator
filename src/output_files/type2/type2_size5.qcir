#QCIR-G14
# Circuit name: type2_size5
# Num. vars.: 10
# Num. gates: 64
exists(1)
forall(2)
exists(3)
forall(4)
exists(5)
forall(6)
exists(7)
forall(8)
exists(9)
forall(10)
output(-83)
11 = and(-1, -2)
14 = and(1, -2)
15 = and(-1, 2)
12 = or(14, 15)
13 = and(1, 2)
19 = and(3, -4)
20 = and(-3, 4)
16 = and(-3, -4)
17 = or(19, 20)
18 = and(3, 4)
21 = and(11, 16)
22 = and(12, 18)
23 = and(13, 17)
24 = or(21, 22, 23)
25 = and(11, 17)
26 = and(12, 16)
27 = and(13, 18)
28 = or(25, 26, 27)
29 = and(11, 18)
30 = and(12, 17)
31 = and(13, 16)
32 = or(29, 30, 31)
36 = and(5, -6)
37 = and(-5, 6)
33 = and(-5, -6)
34 = or(36, 37)
35 = and(5, 6)
38 = and(24, 33)
39 = and(28, 35)
40 = and(32, 34)
41 = or(38, 39, 40)
42 = and(24, 34)
43 = and(28, 33)
44 = and(32, 35)
45 = or(42, 43, 44)
46 = and(24, 35)
47 = and(28, 34)
48 = and(32, 33)
49 = or(46, 47, 48)
53 = and(7, -8)
54 = and(-7, 8)
50 = and(-7, -8)
51 = or(53, 54)
52 = and(7, 8)
55 = and(41, 50)
56 = and(45, 52)
57 = and(49, 51)
58 = or(55, 56, 57)
59 = and(41, 51)
60 = and(45, 50)
61 = and(49, 52)
62 = or(59, 60, 61)
63 = and(41, 52)
64 = and(45, 51)
65 = and(49, 50)
66 = or(63, 64, 65)
70 = and(9, -10)
71 = and(-9, 10)
67 = and(-9, -10)
68 = or(70, 71)
69 = and(9, 10)
72 = and(58, 67)
73 = and(62, 69)
74 = and(66, 68)
75 = or(72, 73, 74)
76 = and(58, 68)
77 = and(62, 67)
78 = and(66, 69)
79 = or(76, 77, 78)
80 = and(58, 69)
81 = and(62, 68)
82 = and(66, 67)
83 = or(80, 81, 82)
